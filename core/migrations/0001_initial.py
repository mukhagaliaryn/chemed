# Generated by Django 5.2.3 on 2025-08-06 10:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Атауы')),
                ('order', models.PositiveIntegerField(verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модульдер',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Matching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction', models.TextField(blank=True, null=True, verbose_name='Сұрақ')),
            ],
            options={
                'verbose_name': 'Сәйкестендіру',
                'verbose_name_plural': 'Сәйкестендірулер',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Сұрақ')),
                ('question_type', models.CharField(choices=[('simple', 'Бір жауапты'), ('multiple', 'Көп жауапты')], default='simple', max_length=32, verbose_name='Сұрақтың түрі')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Сұрақ',
                'verbose_name_plural': 'Сұрақтар',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='core/account/users/', verbose_name='Сурет')),
                ('user_type', models.CharField(choices=[('student', 'Оқушы'), ('teacher', 'Мұғалім'), ('admin', 'Администрация')], default='student', max_length=32, verbose_name='Қолданушы типі')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Қолданушы',
                'verbose_name_plural': 'Қолданушылар',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Тақырыбы')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Анықтамасы')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('duration', models.PositiveSmallIntegerField(default=0, verbose_name='Сабақтың уақыты (мин)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Реттілік нөмері')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.chapter', verbose_name='Модуль')),
            ],
            options={
                'verbose_name': 'Сабақ',
                'verbose_name_plural': 'Сабақтар',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('video', 'Видеосабақ')], default='video', max_length=32, verbose_name='Контент түрі')),
                ('content_score', models.PositiveIntegerField(default=0, verbose_name='Жалпы балл')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Реттілік нөмері')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='core.lesson', verbose_name='Сабақ')),
            ],
            options={
                'verbose_name': 'Контент',
                'verbose_name_plural': 'Контенттер',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='LessonDocs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Тақырыбы')),
                ('file', models.FileField(blank=True, null=True, upload_to='core/models/lesson/docs/', verbose_name='Файл')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docs', to='core.lesson', verbose_name='Сабақ')),
            ],
            options={
                'verbose_name': 'Сабақ құжаты',
                'verbose_name_plural': 'Сабақ құжаттары',
            },
        ),
        migrations.CreateModel(
            name='Pair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_item', models.CharField(max_length=255, verbose_name='Сол жақ')),
                ('right_item', models.CharField(max_length=255, verbose_name='Оң жақ (дұрыс жауап)')),
                ('matching', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairs', to='core.matching', verbose_name='Сәйкестендіру')),
            ],
            options={
                'verbose_name': 'Сәйкестендіру жұбы',
                'verbose_name_plural': 'Сәйкестендіру жұптары',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Жауап')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Дұрыс жауап')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Жауап баллы')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='core.question', verbose_name='Сұрақ')),
            ],
            options={
                'verbose_name': 'Жауап нұсқасы',
                'verbose_name_plural': 'Жауап нұсқалары',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Атауы')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='core/models/subject/posters', verbose_name='Постер')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Анықтамасы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Уақыты')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Соңғы өзгеріс')),
                ('view', models.PositiveIntegerField(default=0, verbose_name='Қаралым')),
                ('cert', models.FileField(blank=True, null=True, upload_to='core/models/subject/certs', verbose_name='Сертификат')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to=settings.AUTH_USER_MODEL, verbose_name='Қолданушы')),
            ],
            options={
                'verbose_name': 'Пән',
                'verbose_name_plural': 'Пәндер',
                'ordering': ('created_at',),
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.subject', verbose_name='Пән'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='core.subject', verbose_name='Пән'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('written', 'Жазбаша'), ('text_gap', 'Сөйлемді аяқтау'), ('test', 'Тест'), ('matching', 'Сәйкестендіру')], default='written', max_length=32, verbose_name='Тапсырма түрі')),
                ('task_score', models.PositiveIntegerField(default=0, verbose_name='Жалпы балл')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Реттілік нөмері')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.lesson', verbose_name='Сабақ')),
            ],
            options={
                'verbose_name': 'Тапсырма',
                'verbose_name_plural': 'Тапсырмалар',
                'ordering': ('order',),
            },
        ),
        migrations.AddField(
            model_name='matching',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifications', to='core.task', verbose_name='Тапсырма'),
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction', models.TextField(blank=True, null=True, verbose_name='Тест')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='core.task', verbose_name='Тапсырма')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесттер',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.test', verbose_name='Тест'),
        ),
        migrations.CreateModel(
            name='TextGap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField(verbose_name='Сөйлем (көп нүктемен)')),
                ('correct_answer', models.CharField(max_length=255, verbose_name='Дұрыс жауап')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_gaps', to='core.task', verbose_name='Сабақ')),
            ],
            options={
                'verbose_name': 'Сөйлемді аяқтау тапсырмасы',
                'verbose_name_plural': 'Сөйлемді аяқтау тапсырмалары',
            },
        ),
        migrations.CreateModel(
            name='UserLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Сабақтың бағасы (%)')),
                ('status', models.CharField(choices=[('no-started', 'Сабақ басталмады'), ('in-progress', 'Сабақ өтілуде'), ('finished', 'Сабақ аяқталды')], default='no-started', max_length=64, verbose_name='Status')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Орындалды')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Орындалған уақыты')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lessons', to='core.lesson', verbose_name='Сабақ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lessons', to=settings.AUTH_USER_MODEL, verbose_name='Қолданушы')),
            ],
            options={
                'verbose_name': 'Қолданушының сабағы',
                'verbose_name_plural': 'Қолданушының сабақтары',
            },
        ),
        migrations.CreateModel(
            name='UserContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Орындалды')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_contents', to='core.content', verbose_name='Контент')),
                ('user_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_contents', to='core.userlesson', verbose_name='Қолданушының сабағы')),
            ],
            options={
                'verbose_name': 'Қолданушының контенті',
                'verbose_name_plural': 'Қолданушының контенттері',
            },
        ),
        migrations.CreateModel(
            name='UserQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Дұрыс па')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Жинаған балл')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_questions', to='core.question', verbose_name='Сұрақ')),
            ],
            options={
                'verbose_name': 'Қолданушы сұрағы',
                'verbose_name_plural': 'Қолданушы сұрақтары',
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.ManyToManyField(related_name='user_answers', to='core.option', verbose_name='Таңдалған нұсқалар')),
                ('user_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='core.userquestion', verbose_name='Қолданушы сұрағы')),
            ],
            options={
                'verbose_name': 'Таңдалған жауап',
                'verbose_name_plural': 'Таңдалған жауаптар',
            },
        ),
        migrations.CreateModel(
            name='UserSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_score', models.PositiveSmallIntegerField(default=0, verbose_name='Пәннің жалпы бағасы (%)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Орындалды')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Басталған уақыты')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Орындалған уақыты')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subjects', to='core.subject', verbose_name='Пән')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subjects', to=settings.AUTH_USER_MODEL, verbose_name='Қолданушы')),
            ],
            options={
                'verbose_name': 'Қолданушының пәні',
                'verbose_name_plural': 'Қолданушының пәндері',
            },
        ),
        migrations.AddField(
            model_name='userlesson',
            name='user_subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lessons', to='core.usersubject', verbose_name='Қолданушының пәні'),
        ),
        migrations.CreateModel(
            name='UserChapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Бөлімнің жалпы бағасы (%)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Орындалды')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_chapters', to='core.chapter', verbose_name='Бөлім')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_chapters', to=settings.AUTH_USER_MODEL, verbose_name='Қолданушы')),
                ('user_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_chapters', to='core.usersubject', verbose_name='Қолданушының пәндері')),
            ],
            options={
                'verbose_name': 'Қолданушының пән бөлімі',
                'verbose_name_plural': 'Қолданушының пән бөлімдері',
            },
        ),
        migrations.CreateModel(
            name='UserTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='Жіберілген уақыты')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Бағасы')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Орындалды')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tasks', to='core.task', verbose_name='Тапсырма')),
                ('user_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tasks', to='core.userlesson', verbose_name='Қолданушының сабағы')),
            ],
            options={
                'verbose_name': 'Тапсырма нәтижесі',
                'verbose_name_plural': 'Тапсырма нәтижелері',
            },
        ),
        migrations.AddField(
            model_name='userquestion',
            name='user_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_questions', to='core.usertask', verbose_name='Қолданушы тапсырмасы'),
        ),
        migrations.CreateModel(
            name='UserMatching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_right', models.CharField(max_length=255, verbose_name='Таңдалған оң жақ')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Сәйкес пе')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pair', verbose_name='Сәйкес жұп (дұрыс)')),
                ('user_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_answers', to='core.usertask', verbose_name='Қолданушы тапсырмасы')),
            ],
            options={
                'verbose_name': 'Сәйкестендіру жауабы',
                'verbose_name_plural': 'Сәйкестендіру жауаптары',
            },
        ),
        migrations.CreateModel(
            name='UserTextGap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255, verbose_name='Жазған жауабы')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Дұрыс па')),
                ('user_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='text_gap_answer', to='core.usertask', verbose_name='Жауап')),
            ],
            options={
                'verbose_name': 'Сөйлемді аяқтау жауабы',
                'verbose_name_plural': 'Сөйлемді аяқтау жауаптары',
            },
        ),
        migrations.CreateModel(
            name='UserWritten',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(verbose_name='Жазған мәтіні')),
                ('user_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='written_answer', to='core.usertask', verbose_name='Жауап')),
            ],
            options={
                'verbose_name': 'Жазбаша жауап',
                'verbose_name_plural': 'Жазбаша жауаптар',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL сілтеме')),
                ('duration', models.PositiveSmallIntegerField(default=0, verbose_name='Видео уақыт')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Реттілік нөмері')),
                ('content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='core.content', verbose_name='Контент')),
            ],
            options={
                'verbose_name': 'Видеосабақ',
                'verbose_name_plural': 'Видеосабақтар',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='UserVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True, verbose_name='Көрген уақыты')),
                ('watched_seconds', models.PositiveIntegerField(default=0, verbose_name='Қараған уақыт (сек)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Аяқталған')),
                ('user_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_videos', to='core.usercontent', verbose_name='Қолданушының контенті')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_videos', to='core.video', verbose_name='Видео')),
            ],
            options={
                'verbose_name': 'Қолданушының видеосабағы',
                'verbose_name_plural': 'Қолданушының видеосабақтары',
            },
        ),
        migrations.CreateModel(
            name='Written',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction', models.TextField(blank=True, null=True, verbose_name='Тапсырма')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written', to='core.task', verbose_name='Тапсырма')),
            ],
            options={
                'verbose_name': 'Жазбаша',
                'verbose_name_plural': 'Жазбаша тапсырмалар',
            },
        ),
    ]
